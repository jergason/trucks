:javascript
  $(function () {
    function validatePriceAndSubmit(event) {
      $("#form_error").hide();
      $("#form_message").hide();

      var priceRegex = new RegExp(/[0-9\.]/);
      var cutoff = new RegExp(/^[0-9]+$/);
      var pricePerMile = new RegExp(/^\d\.\d\d$/);
      var error = "";

      if (!priceRegex.test($("#price").val())) {
        error += "<em>Error:</em> Price must be digits only.<br />"
      }
      if (!cutoff.test($("#mileage_cutoff_field").val())) {
        error += "<em>Error:</em> Mileage cutoff must consist of only digits, and cannot be empty.<br />";
      }
      if (!cutoff.test($("#second_mileage_cutoff_field").val())) {
        error += "<em>Error:</em>Second mileage cutoff must consist of only digits, and cannot be empty.<br />";
      }
      if (!pricePerMile.test($("#add_per_mile_field").val())) {
        error += "<em>Error:</em> Price per mile must begin with a digit followed by a period and two more digits (like this: 0.07)<br />";
      }
      if (!pricePerMile.test($("#deduct_per_mile_field").val())) {
        error += "<em>Error:</em> Price per mile must begin with a digit followed by a period and two more digits (like this: 0.07)<br />";
      }
      if (!pricePerMile.test($("#second_deduct_per_mile_field").val())) {
        error += "<em>Error:</em> Price per mile must begin with a digit followed by a period and two more digits (like this: 0.07)<br />";
      }

      if (error !== "") {
        $("#form_error").text(error);
        $("#form_error").slideDown();
        $("#price").select();
      }
      else {
        TruckPricer.setTruckPrice.call(TruckPricer, event);
        $("#form_message").slideDown();
      }
    }
    //Make sure getTruckPrice and setTruckPrice use TruckPricer for their function context
    // so calls inside them to this.makeRequestParams() work as expected. I am sure
    // that there is a better way to do this, but don't know how.
    $("select", "#price_form").change(function(event) {
      TruckPricer.getTruckPrice.call(TruckPricer, event);
    });

    //Hide the submit button so they can't use it if Javascript is enabled
    // and add our own submit button
    $("#price_submit").hide();
    $("#price_form").append("<button id='new_price_submit' type='button'>Set price and formula</button>");
    $("#new_price_submit").click(function(event) {
      validatePriceAndSubmit(event);
    });

    //Show the price of the currently selected truck
    TruckPricer.getTruckPrice.call(TruckPricer);

    //Disable enter key so they don't submit the form without going
    // through the AJAX stuff.
    $("body").keypress(function(event) {
      if (event.which == 13) {
        event.preventDefault();
        validatePriceAndSubmit(event);
      }
    });
  });

#price_form
  %form{ :id => "price_form", :method => "POST", :action => "/price" }
    .field
      .label
        = label_tag :truck_model_id
      = select_tag :truck_model_id, :id => "truck_model", :options => @truck_model_options
    .field
      .label
        = label_tag :engine_id
      = select_tag :engine_id, :id => "engine", :options => @engine_options
    .field
      .label
        = label_tag :year_id
      = select_tag :year_id, :id => "year", :options => @year_options
    #form_message
    #form_error
    .field
      .label
        = label_tag :price
      = text_field_tag :price, :id => "price", :placeholder => "One billion dollars"
    %p
      If a truck's mileage is <em>below</em> the average mileage, then (average_mileage - actual_mileage) * add_per_mile
      will be <em>added</em> to the base price of the truck.
    %p
      If a truck's mileage is <em>above</em> the average mileage, then (actual_mileage - average_mileage) * 
      deduct_per_mile will be <em>deducted</em> from the base price of the truck.
    %p
      If a truck's mileate is <em>above</em> the second mileage cutoff, then (actual mileage - average_mileate) *
      second_deduct_per_mile will be <em>deducted</em> from the base price of the truck.
    .field
      .label
        = label_tag :average_mileage
      = text_field_tag :mileage_cutoff, :id => "mileage_cutoff_field", :placeholder => "Mileage cutoff"
    .field
      .label
        = label_tag :second_cutoff
      = text_field_tag :second_mileage_cutoff, :id => "second_mileage_cutoff_field", :placeholder => "Second mileage cutoff"
    .field
      .label
        = label_tag :add_per_mile
      = text_field_tag :add_per_mile, :id => "add_per_mile_field", :placeholder => "Add per mile"
    .field
      .label
        = label_tag :deduct_per_mile
      = text_field_tag :deduct_per_mile, :id => "deduct_per_mile_field", :placeholder => "Deduct per mile"
    .field
      .label
        = label_tag :second_deduct_per_mile
      = text_field_tag :second_deduct_per_mile, :id => "second_deduct_per_mile_field", :placeholder => "Second deduct per mile"
    .field
      %p The Extra deduct field will deduct the given amount from the final calculated price.
      .label
        = label_tag :extra_deduct
      = text_field_tag :extra_deduct, :id => "extra_deduct", :placeholder => "Extra deduction"

    = submit_tag "Set price and formula", :id => "price_submit"
